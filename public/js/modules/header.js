const apletListGenerate=t=>{let e=[];return t.split("; ").forEach(t=>{let n=t.split(", "),o=n[0],s=n[1];e.push({name:o,ico:s})}),e},header_btn={props:["ico","clb"],template:'\n\t\t<button\n\t\t@click="( clb ? clb() : toggleApletWindow() )"\n\t\tclass="options-btn"><span :class="ico"></span></button>\n\t',methods:{toggleApletWindow(){this.$el.parentElement.querySelector(".window").classList.toggle("window--active")}}},header_inp={data:function(){return{inp_value:null}},props:["placeholder","clb"],template:'\n\t\t<input \n\t\t\tclass="header__inp"\n\t\t\t:placeholder="placeholder" @change="writed" v-model="inp_value">\n\t',methods:{writed(){this.clb(this.inp_value),this.inp_value="",this.$el.classList.remove("header__inp--active")}}},color_input={data:function(){return{curent:"#ffffff"}},props:["name","clb"],template:'\n\t<div class="window__inp-el--wrap">\n\t\t<h2 class="window__label">{{ name }}</h2>\n\t\t<div class="box-color-inp">\n\t\t\t<input type="color" v-model="curent" @change="setProperty">\n\t\t\t<input class="window__inp-el" v-model="curent">\n\t\t</div>\n\t</div>\n\t',methods:{setProperty(){this.clb(this.name,this.curent)}}},pugination={props:{curent:{default:0},total:{default:0},step:{default:0},clb:{default:!1}},computed:{pages(){return Math.ceil(this.total/this.step)},page_list(){let t=this.curent-2,e=this.curent+2,n=[];t=t<0?0:t,e=e>this.pages-1?this.pages-1:e;for(let o=t;o<=e;o++)n.push(o);return n}},methods:{nextPage(){this.clb(this.curent+1)},prevPage(){this.clb(this.curent-1)},changePage(t){this.clb(t)}},template:'\n\t\t<div v-if="total > 0 && this.clb" class="pugination">\n\t\t\t<button class="pugination__btn"\n\t\t\t\tv-if="curent > 0"\n\t\t\t\t@click="prevPage"\n\t\t\t>Назад</button>\n\t\t\t<div>\n\t\t\t\t<button class="pugination__btn"\n\t\t\t\t\t:class="{active: page_index == curent}"\n\t\t\t\t\tv-for="page_index in page_list"\n\t\t\t\t\t@click="changePage( page_index )"\n\t\t\t\t>\n\t\t\t\t{{ page_index + 1 }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<button class="pugination__btn"\n\t\t\t\tv-if="( curent + 1 ) < pages"\n\t\t\t\t@click="nextPage"\n\t\t\t>Вперед</button>\n\t\t</div>\n\t'},win_content_info={template:'\n\t\t<div>\n\t\t\t<h1>Free reader. V 4.0.1</h1>\n\t\t\t<p>© MIT, 2021.</p>\n\t\t\t<p><a href="https://github.com/lonli-lokli-999/free_reader">Github</a></p>\n\t\t\t<p><a href="https://money.yandex.ru/to/410017268643291">Поддержать разработку</a></p>\n\t\t</div>\n\t'},color_scheme={data:function(){return{themes:null,curent_theme:null}},template:'\n\t\t<div>\n\t\t\t<h2 class="window__label">Выберите цветовую схему</h2>\n\t\t\t<div v-for="( theme, id ) in themes"\n\t\t\t\tclass="theme-item">\n\t\t\t\t<span class="theme-item__title">{{theme.name}}</span>\n\n\t\t\t\t<button\n\t\t\t\t\tv-if="theme.$id"\n\t\t\t\t\t@click="deleteTheme( theme )" \n\t\t\t\t\tclass="window__btn" >\n\t\t\t\t\tУдалить\n\t\t\t\t</button>\n\n\t\t\t\t<button \n\t\t\t\t\t@click="setTheme( theme )"\n\t\t\t\t\t:class="( curent_theme == theme.name ? \'window__btn--active\' : \'\' )" \n\t\t\t\t\tclass="window__btn">\n\t\t\t\t\tАктивировать\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t',methods:{setTheme(t){this.curent_theme=localStorage.def_theme_name=t.name,activateTheme(t.colors)},deleteTheme(t){LSModel.del("user_themes",t.$id),this.themes=this.themes.filter(e=>e.$id!=t.$id),msg(`Тема: '${t.name}', удалена.`)}},created:function(){fetch("./data/themes.json").then(t=>t.json()).then(t=>{this.themes=t.concat(LSModel.get("user_themes"))})}},new_scheme={data:function(){return{translucent_color:"#ffffff",translucent_bg:"#ffffff",header_bg:"#ffffff",header_color:"#ffffff",content_bg:"#ffffff",content_color:"#ffffff",theme_name:null}},template:'\n\t\t<div>\n\t\t\t<span class="window__label">Создать цветовую схему</span>\n\t\t\t\n\t\t\t<input class="window__inp-el" v-model="theme_name" placeholder="Введите имя темы">\n\t\t\t\n\t\t\t<div class="window__color-writer">\n\t\t\t\t<color_input :name="\'translucent_bg\'" :clb="setColor"></color_input>\n\t\t\t\t<color_input :name="\'translucent_color\'" :clb="setColor"></color_input>\n\t\t\t\t<color_input :name="\'header_bg\'" :clb="setColor"></color_input>\t\n\t\t\t\t<color_input :name="\'header_color\'" :clb="setColor"></color_input>\t\n\t\t\t\t<color_input :name="\'content_bg\'" :clb="setColor"></color_input>\t\n\t\t\t\t<color_input :name="\'content_color\'" :clb="setColor"></color_input>\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<button class="window__btn" @click="add">Добавить</button>\n\t\t\t<button class="window__btn" @click="preview">Предпросмотр</button>\n\t\t</div>\n\t',methods:{setColor(t,e){this[t]=e},add(){if(""==this.theme_name)return!1;LSModel.set("user_themes",{name:this.theme_name,colors:`${this.header_bg} ${this.header_color} ${this.content_bg} ${this.content_color} ${this.translucent_color} ${this.translucent_bg}`,user:!0}),msg(`Тема: '${this.theme_name}', сохранена.`),this.theme_name=""},preview(){activateTheme(`${this.header_bg} ${this.header_color} ${this.content_bg} ${this.content_color} ${this.translucent_color} ${this.translucent_bg}`)}},components:{color_input:color_input}},win_content_settings={data:function(){return{settings:null}},template:'\n\t<div>\n\t\t<div\n\t\t\tv-for="( sett, id ) in settings" \n\t\t\tclass="inp-settings-box">\n\t\t\t<span class="window__label" >{{ sett.title }} </span>\n\t\t\t<div class="window__inp-el-wrap">\n\t\t\t\t<input\n\t\t\t\t@change="setProperty" \n\t\t\t\t:data="sett.css"\n\t\t\t\t:placeholder="sett.title"\n\t\t\t\t:value="sett.value"\n\t\t\t\tclass="window__inp-el">\n\t\t\t\t<button \n\t\t\t\tv-if="sett.options"\n\t\t\t\t@click="toggleOptions"\n\t\t\t\tclass="options-list__toggle">\n\t\t\t\t<span class="fa fa-angle-double-down"></span></button>\n\t\t\t\t<ul \n\t\t\t\t\tv-if="sett.options"\n\t\t\t\t\t:class="( 5 == id ? \'options-list--last\' : \'\')"\n\t\t\t\t\tclass="options-list">\n\t\t\t\t\t<li\n\t\t\t\t\t\tclass="options-list__item"\n\t\t\t\t\t\t@click="selectOption"\n\t\t\t\t\t\t:data="option"\n\t\t\t\t\t\tv-for="option in sett.options.split( \' \' )">\n\t\t\t\t\t\t{{ option }}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t',methods:{toggleOptions(t){t.target.closest(".window__inp-el-wrap").querySelector(".options-list").classList.toggle("options-list--active")},selectOption(t){let e=t.target.closest(".window__inp-el-wrap").querySelector(".window__inp-el"),n=e.getAttribute("data"),o=t.target.getAttribute("data");e.value=o,this.setProperty(!1,{property:n,value:o}),this.toggleOptions(t)},setProperty(t,e){let n=e?e.property:t.target.getAttribute("data"),o=e?e.value:t.target.value;document.querySelector(":root").style.setProperty(n,o),settingsModel.set(n,o)}},created:function(){fetch("./data/settings.json").then(t=>t.json()).then(t=>this.settings=t)}},flibusta={data:function(){return{books:null,search_str:null,title:null,total:0,curent:0,step:0}},template:'\n\t<div>\n\t\t<header class="flibusta-header">\n\t\t\t<div class="search">\n\t\t\t\t<input class="search__inp-el" placeholder="Найти..." v-model="search_str" @change="getBooks">\n\t\t\t\t<button class="search__btn" @click="getBooks"><i class="fa fa-search"></i></button>\n\t\t\t</div>\n\t\t\t<div is="pugination"\n\t\t\t\t:total="total"\n\t\t\t\t:step="step"\n\t\t\t\t:curent="curent"\n\t\t\t\t:clb="changePage">\n\t\t\t</div>\n\t\t</header>\n\t\t<div class="books-list">\n\t\t\t<div\n\t\t\t\tv-for="book in books" \n\t\t\t\tclass="books-list-item" \n\t\t\t\t:style="(\'background-image: url(\'+book.cover+\');\')">\n\t\t\t\t<main class="books-list-item__main">\n\t\t\t\t\t<p>{{ book.book_name }}</p>\n\t\t\t\t\t<p>{{ book.author }}</p>\n\t\t\t\t</main>\n\t\t\t\t<footer class="books-list-item__footer">\n\t\t\t\t\t<button class="footer__btn" @click="read( book )"><i class="fa fa-book"></i></button>\n\t\t\t\t\t<button class="footer__btn" @click="save( book )"><i class="fa fa-save"></i></button>\n\t\t\t\t\t<div class="book__downloads">\n\t\t\t\t\t\t<button class="footer__btn" @click="toggleDownloadsLinks"><i class="fa fa-download"></i></button>\n\t\t\t\t\t\t<div class="book__downloads-links">\n\t\t\t\t\t\t\t<a class="footer__btn" :href="(book.link + \'/fb2\')" target="_blank">Fb2</a>\n\t\t\t\t\t\t\t<a class="footer__btn" :href="(book.link + \'/epub\')" target="_blank">Epub</a>\n\t\t\t\t\t\t\t<a class="footer__btn" :href="(book.link + \'/mobi\')" target="_blank">Mobi</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t\t<button class="footer__btn" @click="share( book )"><i class="fa fa-share-alt"></i></button>\n\t\t\t\t\t<button v-if="book.seria != \'\'" class="footer__btn" @click="getTheSeria( book.seria )"><i class="fa fa-angle-double-right"></i></button>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</div>\n\t\n\t</div>\n\t',methods:{toggleBookSearchBox(){this.$el.querySelector(".window").classList.toggle("window--active")},toggleDownloadsLinks(t){t.target.closest(".book__downloads").querySelector(".book__downloads-links").classList.toggle("book__downloads-links--active")},getTheSeria(t){fetch("/seria/"+t).then(t=>t.json()).then(t=>{this.books=t.books,this.total=t.total,this.curent=0,this.step=t.step})},changePage(t){fetch(`/search/${this.search_str}/${t}`).then(t=>t.json()).then(e=>{this.books=e.books,this.total=e.total,this.curent=t,this.step=e.step})},getBooks(){""!=this.search_str&&fetch(`/search/${this.search_str}/0`).then(t=>t.json()).then(t=>{this.books=t.books,this.total=t.total,this.curent=0,this.step=t.step})},read(t){let{book_name:e,cover:n,main_url:o,_id:s}=t;fetch("/read/"+s).then(t=>t.text()).then(t=>{let o={content:t,cover:n,title:e};this.$root.book=o,console.log(this.$root)})},save(t){let{_id:e,book_name:n,cover:o,author:s,link:a}=t;LSModel.set("books",{_id:e,book_name:n,cover:o,author:s,link:a})},share(t){let{book_name:e,cover:n,_id:o}=t,s=document.createElement("input"),a=`${window.location.origin}?id=${o};book_name=${e};cover=${n}`;document.body.appendChild(s),s.value=a,s.select(),document.execCommand("copy"),s.remove()}},created:function(){let t=window.location.search;if(-1==t.indexOf("id="))return!1;let e=t.match(/id=([0-9]*);/)[1],n=t.match(/name=(.*);/)[1],o=t.match(/cover=([^]*)/)[1];this.read({_id:e,cover:o,book_name:decodeURIComponent(n)})},components:{pugination:pugination}},my_books={data:function(){return{my_books:null}},template:'\n\t\t<div>\n\t\t\t<div class="books-list">\n\t\t\t\t<div\n\t\t\t\t\tv-for="book in my_books" \n\t\t\t\t\tclass="books-list-item" \n\t\t\t\t\t:style="(\'background-image: url(\'+book.cover+\');\')">\n\t\t\t\t\t<main class="books-list-item__main">\n\t\t\t\t\t\t<p>{{ book.book_name }}</p>\n\t\t\t\t\t\t<p>{{ book.author }}</p>\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer class="books-list-item__footer">\n\t\t\t\t\t\t<button class="footer__btn" @click="read( book )"><i class="fa fa-book"></i></button>\n\t\t\t\t\t\t<button class="footer__btn" @click="remove( book )"><i class="fa fa-remove"></i></button>\n\t\t\t\t\t\t<div class="book__downloads">\n\t\t\t\t\t\t\t<button class="footer__btn" @click="toggleDownloadsLinks"><i class="fa fa-download"></i></button>\n\t\t\t\t\t\t\t<div class="book__downloads-links">\n\t\t\t\t\t\t\t\t<a class="footer__btn" :href="(book.link + \'/fb2\')">Fb2</a>\n\t\t\t\t\t\t\t\t<a class="footer__btn" :href="(book.link + \'/epub\')">Epub</a>\n\t\t\t\t\t\t\t\t<a class="footer__btn" :href="(book.link + \'/mobi\')">Mobi</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</footer>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t',methods:{toggleMyBook(){this.booksUpdate(),this.$el.querySelector(".window").classList.toggle("window--active")},booksUpdate(){this.my_books=LSModel.get("books")},toggleDownloadsLinks(t){t.target.closest(".book__downloads").querySelector(".book__downloads-links").classList.toggle("book__downloads-links--active")},read(t){let{book_name:e,cover:n,main_url:o,_id:s}=t;fetch("/read/"+s).then(t=>t.text()).then(t=>{let o={content:t,cover:n,title:e};setTimeout(()=>{let t=readingStatus.last(o.title),e=document.querySelector(".book");e.scrollTop=0!=t?e.scrollHeight/100*t:0},2e3),this.$root.book=o})},remove(t){LSModel.del("books",t._id)}},created:function(){this.booksUpdate()}},aplet_creator={props:["aplet_list"],template:'\n\t<div>\n\t\t<header class="aplet-list__header">\n\t\t\t<button\n\t\t\tv-for="aplet in aplet_list"\n\t\t\tclass="options-btn"\n\t\t\t@click="setTab( aplet.name )"\n\t\t\t><span :class="aplet.ico"></span></button>\n\t\t</header>\n\t\t<main>\n\t\t\t<div\n\t\t\t\tv-for="( aplet, item ) in aplet_list"\n\t\t\t\tclass="aplet-list__item"\n\t\t\t\t:class="(item == 0 ? \'aplet-list__item--active\' : \'\')"\n\t\t\t\t:id="aplet.name"\n\t\t\t\t:is="aplet.name" >\n\t\t\t</div>\n\t\t</main>\n\t</div>\n\t',methods:{setTab(t){this.$el.querySelector(".aplet-list__item--active").classList.remove("aplet-list__item--active"),this.$el.querySelector("#"+t).classList.add("aplet-list__item--active")}},components:{color_scheme:color_scheme,new_scheme:new_scheme,flibusta:flibusta,my_books:my_books}},win={props:["content","ful_width"],template:'\n\t<div class="window"\n\t\t:class="( ful_width ? \'window--ful-width\' : \'\' )"\n\t>\n\t\t<header class="window__header">\n\t\t\t<button \n\t\t\t\tclass="window__close-btn options-btn"\n\t\t\t\t@click="winClose"><span class="fa fa-close"></span></button>\n\t\t</header>\n\t\t<main class="window__main">\n\t\t\t<div \n\t\t\t\tv-if="typeof content == \'string\'"\n\t\t\t\t:is="content"></div>\n\n\t\t\t<div \n\t\t\t\tv-if="typeof content == \'object\'"\n\t\t\t\tis="aplet_creator"\n\t\t\t\t:aplet_list="content"></div>\n\t\t</main>\n\t</div>\n\t',methods:{winClose(){this.$el.classList.remove("window--active")}},components:{aplet_creator:aplet_creator,win_content_settings:win_content_settings,win_content_info:win_content_info}},settings_aplet={data:function(){return{settings:null}},template:"\n\t<div>\n\t\t<header_btn :ico=\"'fa fa-cogs'\"></header_btn>\n\t\t<win :content=\"'win_content_settings'\"></win>\n\t</div>\n\t",components:{header_btn:header_btn,win:win}},colors_aplet={template:'\n\t<div>\n\t\t<header_btn :ico="\'fa fa-paint-brush\'"></header_btn>\n\t\t<win :content="the_component_list"></win>\n\t</div>\n\t',components:{header_btn:header_btn,win:win},computed:{the_component_list:()=>apletListGenerate("color_scheme, fa fa-list; new_scheme, fa fa-plus")}},libres_aplet={template:'\n\t<div>\n\t\t<header_btn :ico="\'fa fa-book\'"></header_btn>\n\t\t<win :content="the_component_list" :ful_width="true"></win>\n\t</div>\n\t',components:{header_btn:header_btn,win:win},computed:{the_component_list:()=>apletListGenerate("flibusta, fa fa-search; my_books, fa fa-save")}},inp_file_aplet={template:'\n\t<div class="options-btn open-book">\n\t\t<span class="fa fa-file"></span>\n\t\t<input type="file" class="open-book__inp" @change="select">\n\t</div>\n\t',methods:{select(t){let e=t.target.files[0];this.$emit("select",e)}}},info_aplet={template:"\n\t<div>\n\t\t<header_btn :ico=\"'fa fa-info'\"></header_btn>\n\t\t<win :content=\"'win_content_info'\"></win>\n\t</div>\n\t",components:{header_btn:header_btn,win:win}},reading_status_aplet={data:function(){return{reading_status:null}},props:["curent_reading_status"],template:'\n\t<div class="reading-status-aplet">\n\t\t<span class="options-btn print-status" @click="toggleInp">{{ reading_status }}</span>\n\t\t<header_inp :placeholder="\'Перейти к...\'" :clb="goTo"></header_inp>\n\n\t\t<div class="reading-status-grafic" @click="progressLineChange">\n\t\t\t<span \n\t\t\t\tclass="reading-status-grafic__progress-line"></span>\n\t\t</div>\n\t</div>\n\t',methods:{goTo(t){let e=document.querySelector(".book"),n=e.clientHeight*(t-1)+1;""!==t&&/[0-9]/.test(t)&&(e.scrollTop=n)},progressLineChange(t){let e=document.querySelector(".book"),n=document.querySelector(".reading-status-grafic").clientHeight,o=t.layerY/n*100;e&&(e.scrollTop=e.scrollHeight/100*o)},toggleInp(){this.$el.querySelector(".header__inp").classList.toggle("header__inp--active")}},watch:{curent_reading_status(t){let e=document.querySelector(".book"),n=document.querySelector(".reading-status-grafic__progress-line"),o=e.scrollHeight,s=Math.floor(o/e.clientHeight),a=Math.ceil(e.scrollTop/e.clientHeight);a<1&&(a=1),n.style.height=t+"%",this.reading_status=`${a}/${s}`}},components:{header_inp:header_inp}},bookmark_aplet={props:["curent_reading_status"],template:'\n\t<div class="reading-status-aplet">\n\t\t<button class="options-btn" @click="toggleInp"><span class="fa fa-bookmark"></span></button>\n\t\t<header_inp :placeholder="\'Имя новой закладки\'" :clb="addBookmark"></header_inp>\n\t</div>\n\t',methods:{addBookmark(t){if(""==t&&!t)return!1;let e=document.querySelector(".book"),n=e.scrollTop/e.scrollHeight*100;LSModel.set("bookmark",{book:this.$root.book.title,name:t,progress:n}),msg(`Добавлена закладка '${t}' в книге: '${this.$root.book.title}'`)},toggleInp(){this.$el.querySelector(".header__inp").classList.toggle("header__inp--active")}},components:{header_inp:header_inp}};export const header={props:["curent_reading_status","book_open"],template:'\n\t\t<header \n\t\t\tclass="main-header-wrap" >\n\t\t\t<div class="main-header conatiner">\n\t\t\t\t<div \n\t\t\t\t\tclass="options"\n\t\t\t\t\t:class="book_open ? \'options--active\' : \'\'"\n\t\t\t\t\t>\n\t\t\t\t\t<inp_file_aplet @select="selectFile" ></inp_file_aplet>\n\t\t\t\t\t<libres_aplet></libres_aplet>\n\t\t\t\t\t<bookmark_aplet v-if="curent_reading_status != undefined"></bookmark_aplet>\n\t\t\t\t\t<div \n\t\t\t\t\t\tv-if="curent_reading_status != undefined"\n\t\t\t\t\t\tis="reading_status_aplet" \n\t\t\t\t\t\t:curent_reading_status="curent_reading_status">\n\t\t\t\t\t</div>\n\t\t\t\t\t<settings_aplet></settings_aplet>\n\t\t\t\t\t<colors_aplet></colors_aplet>\n\t\t\t\t\t<info_aplet></info_aplet>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t',components:{inp_file_aplet:inp_file_aplet,reading_status_aplet:reading_status_aplet,settings_aplet:settings_aplet,colors_aplet:colors_aplet,info_aplet:info_aplet,libres_aplet:libres_aplet,bookmark_aplet:bookmark_aplet},methods:{selectFile(t){t&&this.$emit("select",t)}}};