const emblem={template:'<div class="emblem"><div class="spine"></div><div class="bookmark"></div></div>'},book_area={props:["content"],template:'\n\t<div class="book" @scroll="updateReadingStatus" >\n\t\t<div v-html="content"></div>\n\t\t<div class="set-page-btns">\n\t\t\t<button class="set-page-btn" @click="pageUp"><span class="fa fa-angle-double-up"></span></button>\n\t\t\t<button class="set-page-btn" @click="pageDown"><span class="fa fa-angle-double-down"></span></button>\n\t\t</div>\n\t</div>\n\t',methods:{updateReadingStatus(){let t=document.querySelector(".book"),e=t.scrollHeight,a=t.scrollTop/e*100;this.$emit("changeReadingStatus",a)},pageUp(){let t=this.$el;t.scrollTop-=t.clientHeight},pageDown(){let t=this.$el;t.scrollTop+=t.clientHeight}}},tab_bar={props:["chapters","cover","book_name"],data:function(){return{bookmards:null}},methods:{tabBarToggle(){document.querySelector(".tab-bar").classList.toggle("tab-bar--active"),document.querySelector(".tab-bar__toggle-btn").classList.toggle("tab-bar__toggle-btn--active")},viewCover(){let t=document.createElement("div");t.classList.add("img-full-screen-view"),t.appendChild(document.querySelector(".js-cover").cloneNode()),t.addEventListener("click",(function(){this.remove()})),document.body.appendChild(t)},bookmarksUpdate(){this.bookmards=LSModel.get("bookmark",{book:this.book_name})},showTheTab(t){this.$el.querySelector(".tab--active").classList.remove("tab--active");let e=t.target.id?t.target.id:t.target.parentElement.id;this.$el.querySelector("."+e).classList.add("tab--active"),"bookmards"==e&&this.bookmarksUpdate()},goToBookmarks(t){let e=t.target.getAttribute("data-progress"),a=document.querySelector(".book");a.scrollTop=a.scrollHeight/100*e},deleteBookmark(t){let e=t.target.getAttribute("data-bookmarks-id")?t.target:t.target.parentElement,a=e.getAttribute("data-bookmarks-id");LSModel.del("bookmark",a),e.closest(".bookmark-link").remove()}},template:'\n\t\t<div class="tab-bar-wrap">\n\t\t\t<button class="tab-bar__toggle-btn" @click="tabBarToggle">\n\t\t\t\t<span class="fa fa-angle-double-down toggle-btn__icon"></span>\n\t\t\t</button>\n\t\t\t<div class="tab-bar">\n\t\t\t\t<div class="tab tab--active links">\n\t\t\t\t\t<a v-for="link in chapters" :href="link.href" class="tab-bar__chapter">{{link.label}}</a>\n\t\t\t\t</div>\n\t\t\t\t<div class="tab bookmards">\n\t\t\t\t\t<div v-for="link in bookmards" class="bookmark-link">\n\t\t\t\t\t\t<button  :data-progress="link.progress" @click="goToBookmarks" class="tab-bar__chapter">{{link.name}}</button>\n\t\t\t\t\t\t<button class="bookmark-del" :data-bookmarks-id="link.$id" @click="deleteBookmark"><span class="fa fa-minus"></span></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="tab book_info">\n\t\t\t\t\t<img class="js-cover" v-if="cover" :src="cover" @click="viewCover">\n\t\t\t\t\t<h2 class="book-name">{{ book_name }}</h2>\n\t\t\t\t</div>\n\t\t\t\t<footer class="tab-bar__footer">\n\t\t\t\t\t<button class="tab-toggle-btn" @click="showTheTab" id="links">\n\t\t\t\t\t\t<span class="fa fa-list"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class="tab-toggle-btn" @click="showTheTab" id="bookmards">\n\t\t\t\t\t\t<span class="fa fa-bookmark"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class="tab-toggle-btn" @click="showTheTab" id="book_info">\n\t\t\t\t\t\t<span class="fa fa-info"></span>\n\t\t\t\t\t</button>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</div>\n\t\t'};export const main={props:["book"],data:function(){return{chapters:null}},template:'\n\t\t<main class="main-content-wrap" >\n\t\t\t<div class="main-content conatiner">\n\t\t\t\t<div v-if="book" is="tab_bar" :cover="book.cover" :chapters="chapters" :book_name="book.title"></div>\n\t\t\t\t<div \n\t\t\t\t\tv-if="book" \n\t\t\t\t\tis="book_area" \n\t\t\t\t\t:content="book.content"\n\t\t\t\t\t@changeReadingStatus="updateReadingStatus"></div>\n\t\t\t\t<div v-if="!book" is="emblem"></div>\n\t\t\t</div>\n\t\t</main>\n\t',components:{book_area:book_area,emblem:emblem,tab_bar:tab_bar},methods:{updateReadingStatus(t){this.$emit("changeReadingStatus",t)}},watch:{book(){let t=[];setTimeout(()=>{let e=document.querySelector(".book");e.scrollTop=0!=this.book.progress?e.scrollHeight/100*this.book.progress:0,this.$el.querySelectorAll("h2").forEach((e,a)=>{e.id="chapter_"+a,t.push({label:e.innerText,href:"#chapter_"+a})}),this.chapters=t},2e3)}}};